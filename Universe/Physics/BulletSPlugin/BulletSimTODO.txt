Current Priorities
================================================

BSActorAvatarMove

TODO: Decide if the step parameters should be changed depending on the avatar's state (flying, colliding, ...). There is code in ODE to do this.

COMMENTARY: when the user is making the avatar walk, except for falling, the velocity
	specified for the avatar is the one that should be used. For falling, if the avatar
	is not flying and is not colliding then it is presumed to be falling and the Z
	component is not fooled with (thus allowing gravity to do its thing).
	When the avatar is standing, though, the user has specified a velocity of zero and
		the avatar should be standing. But if the avatar is pushed by something in the world
		(raising elevator platform, moving vehicle, ...) the avatar should be allowed to
		move. Thus, the velocity cannot be forced to zero. The problem is that small velocity
		errors can creap in and the avatar will slowly float off in some direction.
	So, the problem is that, when an avatar is standing, we cannot tell creaping error from real pushing.
	The code on line 253 in BSActorAvatarMove.cs uses whether the collider is static or moving to decide whether to zero motion.

BSActorHover

TODO: Complete implementation